{
	"name": "Notebook Test1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "fsparkpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "fe46964a-37d3-4c73-bcf6-97fd2fc98fc5"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/052aae49-ac5d-4e93-b3ba-d2b4cb06df05/resourceGroups/ft-rg-synapse/providers/Microsoft.Synapse/workspaces/ws-syn-test1/bigDataPools/fsparkpool",
				"name": "fsparkpool",
				"type": "Spark",
				"endpoint": "https://ws-syn-test1.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/fsparkpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"**Test SPARK**"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://adf@ftstacc1.dfs.core.windows.net/src/moviesDB.csv', format='csv'\r\n",
					"## If header exists uncomment line below\r\n",
					", header=True\r\n",
					")\r\n",
					"display(df.limit(10))"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					" from pyspark.sql.types import *\r\n",
					" from pyspark.sql.functions import *\r\n",
					"\r\n",
					" schemaT = StructType([\r\n",
					"     StructField(\"movie\", IntegerType()),\r\n",
					"     StructField(\"title\", StringType()),\r\n",
					"     StructField(\"genres\", StringType()),\r\n",
					"     StructField(\"year\", IntegerType()),\r\n",
					"     StructField(\"rating\", IntegerType()),\r\n",
					"     StructField(\"rottentomato\", IntegerType())\r\n",
					"      ])\r\n",
					"\r\n",
					"df = spark.read.load('abfss://adf@ftstacc1.dfs.core.windows.net/src/moviesDB.csv', format='csv', schema=schemaT\r\n",
					"## If header exists uncomment line below\r\n",
					", header=True\r\n",
					")\r\n",
					"display(df.limit(10))"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					" df.printSchema()"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"df_genres = df.select('genres')\r\n",
					"# display(df_genres.limit(10))\r\n",
					"print(df_genres.count())\r\n",
					"print(df_genres.distinct().count())"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"from pyspark.sql.functions import *\r\n",
					"\r\n",
					"# Split the column into an array using the `split` function\r\n",
					"#df_g = df.withColumn('genres', split(df.genres, '|'))\r\n",
					"df_g = df.select( split('genres', \"\\|\").alias('genres') )\r\n",
					"display(df_g.limit(10))\r\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Explode the array and select unique values\r\n",
					"\r\n",
					"unique_genres = df_g.select(explode('genres').alias('unique_genres')).distinct()\r\n",
					"\r\n",
					"# Show the unique values\r\n",
					"unique_genres.show()"
				],
				"execution_count": null
			}
		]
	}
}